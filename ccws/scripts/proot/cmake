#!/bin/bash
source ${CCWS_PROOT_BIN}/common.bash

for DIR in ${CCWS_EXTRA_INSTALL_DIRS};
do
    CCWS_PROOT_ARGS+=" --bind=${CCWS_INSTALL_DIR_BUILD_ROOT}/${DIR}:${DIR}"
done

if [ "${CCWS_CROSS_HOST_PYTHON}" = "YES" ] && [ -d "/opt/ros/${ROS_DISTRO}" ]
then
    # python bindings (only if the same ROS distro is installed on the build system)
    # Note that architecture-specific libraries may be installed to python paths --
    # in such cases this breaks compilation. The performance gain, however is quite
    # substantial.
    CCWS_PROOT_ARGS+=" $(find /usr/bin/ /usr/lib/ -maxdepth 1 -name "python*" | sed "s/^/--bind=/" | paste -s -d ' ')"
fi

#echo ">>>>> CCWS cmake wrapper >>>>>>"
#pwd
#echo "Command line: $@"
# shellcheck disable=SC2086
proot --rootfs="${CCWS_SYSROOT}" \
    --cwd="$(pwd)" \
    ${IFS# profile specific args} \
    ${CCWS_PROOT_ARGS} \
    ${IFS# workspace and compiler} \
    --bind="${CCWS_DIR}" \
    --bind="${WORKSPACE_DIR}" \
    ${IFS# installation paths} \
    --bind="${CCWS_INSTALL_DIR_BUILD}:${CCWS_INSTALL_DIR_HOST}" \
    ${IFS# bind mounting of /bin/ breaks stuff for some reason} \
    --bind=/bin/true \
    --bind=/bin/false \
    --bind=/bin/echo \
    --bind=/bin/ls \
    --bind=/bin/ln \
    --bind=/bin/sh \
    --bind=/bin/rm \
    --bind=/bin/cp \
    --bind=/bin/mv \
    --bind=/bin/pwd \
    --bind=/bin/bash \
    --bind=/bin/uname \
    --bind=/bin/mkdir \
    --bind=/bin/mktemp \
    --bind=/usr/bin/env \
    --bind=/usr/bin/perl \
    --bind=/usr/bin/make \
    --bind=/usr/bin/ccache \
    ${IFS# cmake bindings} \
    --bind=/usr/bin/cmake \
    $(find /usr/share/ -maxdepth 1 -name "cmake*" | sed "s/^/--bind=/" | paste -s -d ' ') \
    "/usr/bin/cmake" "$@"
#echo "<<<<< CCWS cmake wrapper <<<<<<"
#exit 1

